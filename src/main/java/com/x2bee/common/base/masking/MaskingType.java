package com.x2bee.common.base.masking;

/**
 * Masking type
*/
public enum MaskingType {

	/**
	 * DEFAULT
	 * 전체 마스킹
	 */
	DEFAULT("99","기본전체마스킹"),
	/**
	 * 성명 - 한글
	 */
	NAME_KR("01","한글이름"),
	/**
	 * 성명 - 영문
	 * -3자 이상 : 첫번째와 마지막 알파베 제외하고 마스킹
	 * -2자 이하: 뒤 1자리 마스킹
	 */
	NAME_EN("01","영문이름"),
	
	/**
	 * 생년월일
	 * - 일자리 마스킹
	 */
	BIRTH("02","생년월일"),
	
	/**
	 * 주민등록번호
	 * - 앞 7자리 이하 마스킹 (공백 포함)
	 */
	RRN("03","주민번호"),
	
	/**
	 * 전화번호 중간 번호(4자리 또는 3자리)
	 * - 전체 마스킹
	 */
	PHONE_NUM("04","전화번호"),
	
	/**
	 * 핸드폰
	 * 국번 마스킹(앞 3자리와 뒤 4자리는 제외하고 마스킹)
	 */
	MOBILE_NUM("05","휴대전화번호"),
	
	/**
	 * 주소
	 * 앞 7자리 이하 마스킹 (공백 포함). ex)서울 종로구 ********
	 */
	ADDRESS("06","주소"),
	
	/**
	 * 상세주소
	 * - 전체 마스킹
	 */
	ADDRESS_DTL("99","상세주소"),
	
	/**
	 * IP ADDRESS
	 * IPv4 경우 17~24비트. ex) 123.123.***.123
	 * IPv6 경우 113~128비트 영역
	 */
	IP("07","IP Address"),
	
	/**
	 * 이메일
	 * 앞 4자리 노출 + 4자리 이후 마스킹. ex)abcd****
	 * 전체 자리수가 8자리 미만이라도 4자리 마스킹은 동일 적용, 전체 자리수가 8자리 초과인 경우 이후 절사
	 * 
	 * 단, 앞 4자리 내 @가 있을 경우, @포함하여 이후 마스킹. ex)1@naver.com -> 1*******
	 */
	EMAIL("08","이메일"),
	
	/**
	 * ID
	 * - 앞 4자리 노출 + 4자리 마스킹
	 * - 단, 앞 4자리 내 @가 있을 경우, @포함하여 이후 마스킹
	 * - 전체 자리수가 8자리 미만이라도 4자리 마스킹은 동일 적용,
	 * - 전체 자리수가 8자리 초과인 경우 이후 절사
	 */
	ID("09","아이디"),
	
	/**
	 * 계좌번호
	 * - 앞 3자리와 뒤 3자리는 제외하고 마스킹. ex)123******123
	 */
	ACTN("10","계좌번호"),

	/**
	 * 신용카드 번호
	 * - 2, 3번째 영역 전체 마스킹
	 * -16자리인 경우: 1234-****-****-5678
	 * -15자리인 경우: 1234-****-****-567
	 */
	CARD("11","카드번호"),
	
	/**
	 * 고객정보 메모
	 * - 전체 마스킹
	 */
	MEMO("12","개인정보메모"),

	/**
	 * 운전면허번호
	 * - 5번째부터 6자리이상 마스킹
	 *   서울 95-******-61 
	 *   또는 11-95-******-61
	 */
	LICENSE("13","운전면허번호"),
	
	/**
	 * 여권번호
	 * - 뒤 4자리이상 마스킹
	 *   M9999****
	 */
	PASSPORT("14","여권번호"),
	
	/**
	 * 사업자등록번호
	 * - 3번째부터 4자리 이상 마스킹
	 *   12*-**-*1234
	 */
	BNO("15","사업자등록번호"),
	
	/**
	 * QR코드
	 * - 5번째부터 4자리이상 마스킹
	 *   126-0-****-1234
	 */
	QRCODE("16","QR코드");
	
	private final String cd;
	private final String cdNm;

	MaskingType(String cd,String cdNm){
		this.cd = cd;
		this.cdNm = cdNm;
	}

	public String getCd() {
		return cd;
	}

	public boolean isEquals(String cd){
        return cd.equals(this.getCd());
    }
}